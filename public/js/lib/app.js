// Generated by CoffeeScript 1.6.2
(function() {
  var App, _ref;

  window.Namespace = (_ref = window.Namespace) != null ? _ref : {};

  App = (function() {
    function App() {
      var self;

      self = this;
      this.baseURI = window.CONFIG.baseURI;
      this.attachEvents();
    }

    App.prototype.renderViews = function() {
      var $body;

      return $body = $('body');
    };

    App.prototype.isAuthenticated = function() {
      if ($.jStorage.get('privateKey')) {
        return true;
      } else {
        return false;
      }
    };

    App.prototype.preFlight = function(cb) {
      cb = cb != null ? cb : function() {};
      return this.request({
        url: this.baseURI + '/preflight',
        data: {},
        type: 'get',
        success: cb,
        error: function(err) {
          console.log(err);
          return console.error("ERROR : ", err.responseText);
        }
      });
    };

    App.prototype.get = function(url, data, cb) {
      var self;

      cb = cb != null ? cb : function() {};
      data = data != null ? data : {};
      self = this;
      return this.hash(data, function(data) {
        return self.request({
          url: url,
          data: data,
          type: 'get',
          success: cb,
          error: function(err) {
            console.log(err);
            return console.error("ERROR : ", err.responseText);
          }
        });
      });
    };

    App.prototype.post = function(url, data, cb) {
      var self;

      cb = cb != null ? cb : function() {};
      data = data != null ? data : {};
      self = this;
      return this.hash(data, function(data) {
        return self.request({
          url: url,
          data: data,
          type: 'post',
          success: cb,
          error: function(err) {
            console.log(err);
            return console.error("ERROR : ", err.responseText);
          }
        });
      });
    };

    App.prototype.hash = function(data, cb) {
      var d, privateKey, publicKey, _ref1, _ref2;

      cb = cb != null ? cb : function() {};
      d = {};
      privateKey = (_ref1 = $.jStorage.get('privateKey')) != null ? _ref1 : CryptoJS.MD5(data.password).toString();
      publicKey = (_ref2 = $.jStorage.get('publicKey')) != null ? _ref2 : data.username;
      if (data.password) {
        delete data.password;
      }
      d.h = CryptoJS.HmacSHA256(JSON.stringify(data), privateKey).toString();
      d.data = data;
      d.email = publicKey;
      return cb(d);
    };

    App.prototype.request = function(options) {
      return $.ajax(options);
    };

    App.prototype.attachEvents = function() {};

    App.prototype.registerPartials = function() {
      var i, key, _results;

      _results = [];
      for (i in Handlebars.templates) {
        key = i.split('-')[0];
        if (key === 'partial') {
          _results.push(Handlebars.registerPartial(i.split('-')[1], Handlebars.templates[i]));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    App.prototype.render = function(view) {
      var nav;

      $('[data-role="page"]').removeClass('show');
      $('[view="' + view + '"]').addClass('show');
      nav = $('[data-role="nav"]');
      nav.find('[trigger]').removeClass('selected');
      return nav.find('[trigger="' + view + '"]').addClass('selected');
    };

    return App;

  })();

  window.Namespace.App = App;

}).call(this);
