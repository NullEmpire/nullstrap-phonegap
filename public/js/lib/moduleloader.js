// Generated by CoffeeScript 1.6.2
(function() {
  var ModuleLoader, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.PipeTech = (_ref = window.PipeTech) != null ? _ref : {};

  ModuleLoader = (function(_super) {
    __extends(ModuleLoader, _super);

    function ModuleLoader() {
      ModuleLoader.__super__.constructor.call(this);
      this.uri = this.baseURI + '/api/modules';
      this.registerPartials();
    }

    ModuleLoader.prototype.init = function() {
      var self;

      self = this;
      if (!this.isAuthenticated()) {
        return this.preFlight(function() {
          $('body').html(Handlebars.templates['login']());
          self.render('login');
          return $('#login-form').on('submit', function(e) {
            var $el, email, pass;

            e.preventDefault();
            $el = $(this);
            pass = $('#password').val();
            email = $('#email').val();
            return self.post(self.baseURI + "/api/authorizeDevice", {
              username: email,
              password: pass,
              device: {
                id: '132623473sdgs',
                os: ''
              }
            }, function(response) {
              console.log(response);
              if (response.error) {
                return $el.addClass('error');
              } else {
                $.jStorage.set('privateKey', CryptoJS.MD5(pass).toString());
                $.jStorage.set('publicKey', email);
                return self.fetchModules();
              }
            });
          });
        });
      } else {
        return this.fetchModules();
      }
    };

    ModuleLoader.prototype.fetchModules = function() {
      var self;

      self = this;
      return this.get(this.uri, {}, function(modules) {
        var i, k, m, script, template, _i, _j, _ref1, _ref2;

        console.log('Modules : ', modules);
        if (modules.error) {
          return;
        }
        for (i = _i = 0, _ref1 = modules.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
          m = modules[i];
          if (m.disabled != null) {
            continue;
          }
          script = document.createElement("script");
          script.type = 'text/javascript';
          script.text = m.js;
          document.body.appendChild(script);
          for (k = _j = 0, _ref2 = m.templates.length; 0 <= _ref2 ? _j < _ref2 : _j > _ref2; k = 0 <= _ref2 ? ++_j : --_j) {
            template = m.templates[k];
            Handlebars.templates[template.title] = Handlebars.compile(unescape(template.content).toString());
          }
        }
        console.log('Templates : ', Handlebars.templates);
        $("body").html(Handlebars.templates['modules']({
          modules: modules
        }));
        return self.render('modules');
      });
    };

    return ModuleLoader;

  })(window.PipeTech.App);

  window.PipeTech.ModuleLoader = ModuleLoader;

  window.PipeTech.Modules = {};

  window.init = function() {
    var moduleLoader;

    moduleLoader = new window.PipeTech.ModuleLoader;
    return moduleLoader.init();
  };

}).call(this);
